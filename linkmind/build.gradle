buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.32'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.2.224'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'io.sentry:sentry-spring-boot-starter:5.7.0'
    //JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'


	// FCM
	implementation 'com.google.firebase:firebase-admin:9.1.1'
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'  // Firebase 서버로 푸시 메시지 전송 시 필요


    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//Query DSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// S3 AWS
	implementation("software.amazon.awssdk:bom:2.21.0")
	implementation("software.amazon.awssdk:s3:2.21.0")
	implementation 'org.apache.httpcomponents:httpclient:4.5.9'

	// JSoup
	implementation 'org.jsoup:jsoup:1.15.3'

	// slack
	implementation 'com.slack.api:slack-api-client:1.28.0'
	implementation 'com.google.code.gson:gson:2.10.1'

	implementation 'io.sentry:sentry-spring-boot-starter:5.7.0'

	// openfeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

}

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.3")
	}
}
//sourceSets {
//	main {
//		java {
//			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
//		}
//	}
//}
//compileJava {	options.compilerArgs << '-parameters'}


tasks.named('test') {
    useJUnitPlatform()
//    finalizedBy 'jacocoTestReport' // test가 끝나면 jacocoTestReport 동작
}
//// jacoco report 설정
//jacocoTestReport {
//    reports {
//        // html로 report 생성하기
//        // 빌드경로/jacoco/report.html 폴더 내부로 경로 설정
//        html.destination file("$jacoco/report.html")
//    }
//
//    // jacocoTestReport가 끝나면 jacocoTestCoverageVerification 동작
//    finalizedBy 'jacocoTestCoverageVerification'
//}
//
//// jacoco 커버리지 검증 설정
//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            enabled = true // 커버리지 적용 여부
//            element = 'CLASS' // 커버리지 적용 단위
//
//            // 라인 커버리지 설정
//            // 적용 대상 전체 소스 코드들을 한줄 한줄 따졌을 때 테스트 코드가 작성되어 있는 줄의 빈도
//            // 테스트 코드가 작성되어 있는 비율이 90% 이상이어야 함
//            limit {
//                counter = 'LINE'
//                value = 'COVEREDRATIO'
//                minimum = 0.10
//            }
//
//            // 브랜치 커버리지 설정
//            // if-else 등을 활용하여 발생되는 분기들 중 테스트 코드가 작성되어 있는 빈도
//            // 테스트 코드가 작성되어 있는 비율이 90% 이상이어야 함
//            limit {
//                counter = 'BRANCH'
//                value = 'COVEREDRATIO'
//                minimum = 0.00
//            }
//
//            // 라인 최대 갯수 설정
//            // 빈 줄을 제외하고 하나의 자바 파일에서 작성될 수 있는 최대 라인 갯수
//            // 한 파일에 최대 500줄까지 작성되어야 함
//            limit {
//                counter = 'LINE'
//                value = 'TOTALCOUNT'
//                maximum = 500
//            }
//            // 커버리지 체크를 제외할 클래스들
//            excludes = [
//                    //      '*.test.*',
//                    '*.common.*',
//                    '*.config.*',
//                    '*.controller.*',
//                    '*.domain.*',
//                    '*.exception.*',
//                    '*.external.*',
//                    '*.infrastructure.*',
//                    '*.auth.*',
//                    '*.service.*'
//
//            ]
//        }
//    }
//}
